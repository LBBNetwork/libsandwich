/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import "AVVoiceControllerRecordDelegate.h"
#import "assistantd-Structs.h"
#import <XXUnknownSuperclass.h> // Unknown library

@class NSURL, NSString, AVVoiceController, AFDictationOptions, ADSpeechLog, NSError;
@protocol ADSpeechManagerDelegate;

__attribute__((visibility("hidden")))
@interface ADSpeechManager : XXUnknownSuperclass <AVVoiceControllerRecordDelegate> {
	dispatch_queue_s* _queue;
	int _speechState;
	BOOL _shouldTalkToDelegate;
	AVVoiceController* _voiceController;
	BOOL _isPrepared;
	NSError* _recordingError;
	BOOL _isCapturingForDictation;
	NSURL* _dictationStartURL;
	NSURL* _dictationStopURL;
	NSURL* _dictationErrorURL;
	NSURL* _assistantStartURL;
	NSURL* _assistantStopURL;
	NSURL* _assistantErrorURL;
	NSString* _bluetoothDeviceAddress;
	BOOL _pickWiredMic;
	BOOL _routeNeedsPicking;
	int _desiredHWConfig;
	BOOL _needToSetHWConfig;
	NSString* _dictationLanguage;
	AFDictationOptions* _dictationOptions;
	id<ADSpeechManagerDelegate> _delegate;
	dispatch_queue_s* _targetQueue;
	BOOL _didDetectStartpoint;
	BOOL _didTimeout;
	int _packetCount;
	int _powerUpdateFrequency;
	dispatch_source_s* _powerUpdateTimer;
	id _recordStartedCompletion;
	id _recordStoppedCompletion;
	ADSpeechLog* _speechLog;
	id _context;
}
@property(copy, nonatomic, setter=_setRecordStoppedCompletion:) id _recordStoppedCompletion;
@property(copy, nonatomic, setter=_setRecordStartedCompletion:) id _recordStartedCompletion;
@property(retain, nonatomic, setter=_setRecordingError:) NSError* _recordingError;
@property(copy, nonatomic, setter=_setBluetoothDeviceAddress:) NSString* _bluetoothDeviceAddress;
@property(retain, nonatomic) id context;
@property(retain, nonatomic) AFDictationOptions* dictationOptions;
@property(copy, nonatomic) NSString* dictationLanguage;
@property(readonly, assign) BOOL isCapturing;
+ (id)recordingInterruptedError;
+ (id)_noStartpointError;
+ (id)_speechTimedOutError;
+ (id)_speechLogDecodingError;
+ (id)_speechEndFailureError;
+ (id)_speechStartFailureError;
+ (id)_speechCodecError;
+ (id)_badStateError;
- (void)setRecordingAlertRoute:(int)route;
- (void)setBTAddressToPickRoute:(id)pickRoute wiredMic:(BOOL)mic;
- (void)endSession;
- (void)stopSpeechCapture;
- (void)cancelSpeechCapture;
- (void)startSpeechCaptureWithURL:(id)url;
- (void)startSpeechCaptureForDictation:(BOOL)dictation;
- (void)setDelegate:(id)delegate andTargetQueue:(dispatch_queue_s*)queue;
- (void)preheatAudioSystem;
- (void)voiceControllerRecordHardwareConfigurationDidChange:(id)voiceControllerRecordHardwareConfiguration toConfiguration:(int)configuration;
- (void)voiceControllerEndRecordInterruption:(id)interruption;
- (void)voiceControllerBeginRecordInterruption:(id)interruption;
- (void)voiceControllerRecordBufferAvailable:(id)available buffer:(id)buffer;
- (void)voiceControllerDidStopRecording:(id)voiceController forReason:(int)reason;
- (void)voiceControllerDidDetectEndpoint:(id)voiceController;
- (void)voiceControllerDidDetectEndpoint:(id)voiceController ofType:(int)type;
- (void)voiceControllerDidDetectStartpoint:(id)voiceController;
- (void)voiceControllerCodecErrorDidOccur:(id)voiceControllerCodecError wasEncode:(BOOL)encode wasDecode:(BOOL)decode error:(id)error;
- (void)voiceControllerDidStartRecording:(id)voiceController successfully:(BOOL)successfully;
- (void)_pickRouteForBluetoothAddress:(id)bluetoothAddress wiredMic:(BOOL)mic;
- (void)_setExtendedWaitTime;
- (id)_errorForRecordingStoppedReason:(int)recordingStoppedReason;
- (void)_recordingStoppedWithError:(id)error shouldPlayAlert:(BOOL)alert;
- (void)_cancelRecordingWithError:(id)error;
- (void)_cleanupPowerTimer;
- (void)_setupPowerTimer;
- (void)_tellDelegateAboutAveragePower:(float)power peak:(float)peak;
- (void)_tellDelegateAboutSpeechPackets:(id)packets count:(int)count;
- (void)_tellDelegateSpeechStartedForDictation:(BOOL)dictation withCodec:(id)codec source:(id)source;
- (void)_tellDelegateSpeechWillBegin;
- (void)_tellDelegateSpeechFinishedWithPacketCount:(int)packetCount;
- (void)_tellDelegateSpeechFailedWithError:(id)error;
- (void)_tellDelegateSpeechCanceled;
- (void)_cleanUpDelegateInfo;
- (void)_setUpAlertsForDictation:(BOOL)dictation;
- (id)_assistantErrorAlertURL;
- (id)_assistantStopAlertURL;
- (id)_assistantStartAlertURL;
- (id)_dictationErrorAlertURL;
- (id)_dictationStopAlertURL;
- (id)_dictationStartAlertURL;
- (void)_loadDictationAlertURLs;
- (void)_releaseSession;
- (BOOL)_setUpForCapture;
- (void)_setHWConfigIfNeeded;
- (void)_resetVoiceController;
- (BOOL)_prepareVoiceController;
- (id)_voiceController;
- (void)dealloc;
- (id)init;
@end

